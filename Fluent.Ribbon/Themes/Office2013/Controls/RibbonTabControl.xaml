<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:FluentConverters="clr-namespace:Fluent.Converters">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <ControlTemplate x:Key="RibbonTabControlToggleButtonControlTemplate"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                BorderThickness="1"
                Background="{DynamicResource TransparentBrush}"
                BorderBrush="{DynamicResource TransparentBrush}"
                Height="22"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Width="22">
            <Border.ToolTip>
                <Fluent:ScreenTip x:Name="screenTip"
                                  Title="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=MinimizeButtonScreenTipTitle , Mode=OneWay}"
                                  Text="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=MinimizeButtonScreenTipText , Mode=OneWay}" />
            </Border.ToolTip>
            <Border x:Name="border1"
                    Height="Auto"
                    BorderBrush="{DynamicResource TransparentBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource TransparentBrush}">
                <Grid>
                    <Image x:Name="iconImage"
                           HorizontalAlignment="Center"
                           Height="Auto"
                           Stretch="None"
                           VerticalAlignment="Center"
                           Source="/Fluent;Component/Themes/Office2010/Images/RibbonCollapse.png"
                           Width="Auto"
                           Margin="2" />
                    <Image x:Name="iconImageChecked"
                           Visibility="Collapsed"
                           HorizontalAlignment="Center"
                           Height="Auto"
                           Stretch="None"
                           VerticalAlignment="Center"
                           Source="/Fluent;Component/Themes/Office2010/Images/RibbonExpand.png"
                           Width="Auto"
                           Margin="2" />
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="iconImage"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="iconImageChecked"
                        Value="Visible" />
                <Setter Property="Title"
                        TargetName="screenTip"
                        Value="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=ExpandButtonScreenTipTitle , Mode=OneWay}" />
                <Setter Property="Text"
                        TargetName="screenTip"
                        Value="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=ExpandButtonScreenTipText , Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource ButtonPressedOuterBorderBrush}" />
                <Setter Property="Background"
                        TargetName="border"
                        Value="{DynamicResource ButtonPressedOuterBackgroundBrush}" />
                <Setter Property="Background"
                        TargetName="border1"
                        Value="{DynamicResource ButtonPressedInnerBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        TargetName="border1"
                        Value="{DynamicResource ButtonPressedInnerBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsPressed"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        TargetName="border1"
                        Value="{DynamicResource ButtonHoverInnerBorderBrush}" />
                <Setter Property="Background"
                        TargetName="border1"
                        Value="{DynamicResource ButtonHoverInnerBackgroundBrush}" />
                <Setter Property="Background"
                        TargetName="border"
                        Value="{DynamicResource ButtonHoverOuterBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource ButtonHoverOuterBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                    <Condition Property="IsPressed"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        TargetName="border1"
                        Value="{DynamicResource ButtonHoverInnerBorderBrush}" />
                <Setter Property="Background"
                        TargetName="border1"
                        Value="{DynamicResource ButtonHoverInnerBackgroundBrush}" />
                <Setter Property="Background"
                        TargetName="border"
                        Value="{DynamicResource ButtonHoverOuterBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource ButtonHoverOuterBorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RibbonTabControlToggleButtonStyle"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="Template"
                Value="{DynamicResource RibbonTabControlToggleButtonControlTemplate}" />
        <Setter Property="Height"
                Value="22" />
        <Setter Property="Width"
                Value="22" />
        <Setter Property="Foreground"
                Value="{DynamicResource DefaultFontBrush}" />
        <Setter Property="CanAddToQuickAccessToolBar"
                Value="False" />
    </Style>

    <Style x:Key="RibbonTabControlStyle"
           TargetType="{x:Type Fluent:RibbonTabControl}">
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Foreground"
                Value="{DynamicResource DefaultFontBrush}" />
        <Setter Property="Template"
                Value="{DynamicResource RibbonTabControlControlTemplate}" />
    </Style>

    <ControlTemplate x:Key="RibbonTabControlControlTemplate"
                     TargetType="{x:Type Fluent:RibbonTabControl}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid"
                                  Background="{TemplateBinding Background}"
                                  IsHitTestVisible="True">
                                <ScrollContentPresenter  Margin="{TemplateBinding Padding}"
                                                         x:Name="PART_ScrollContentPresenter"
                                                         Content="{TemplateBinding Content}"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                         CanContentScroll="{TemplateBinding CanContentScroll}"
                                                         IsHitTestVisible="True" />
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              HorizontalAlignment="Left"
                                              Width="13"
                                              Height="Auto"
                                              VerticalAlignment="Stretch"
                                              Style="{DynamicResource ScrollButtonStyle}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed"
                                                      Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="0">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ComputedHorizontalScrollBarVisibility" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="HorizontalOffset" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ExtentWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ViewportWidth" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="Black"
                                          Stretch="Fill"
                                          Stroke="{x:Null}"
                                          StrokeThickness="0"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="3"
                                          Height="5"
                                          Data="M0,0L1,1 1,-1z" />
                                </RepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              HorizontalAlignment="Right"
                                              Width="13"
                                              Height="Auto"
                                              VerticalAlignment="Stretch"
                                              Style="{DynamicResource ScrollButtonStyle}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed"
                                                      Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="100">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ComputedHorizontalScrollBarVisibility" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="HorizontalOffset" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ExtentWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ViewportWidth" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="Black"
                                          Stretch="Fill"
                                          Stroke="{x:Null}"
                                          StrokeThickness="0"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="3"
                                          Height="5"
                                          Data="M1,0L0,1 0,-1z" />
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="CanContentScroll"
                        Value="True" />
                <Setter Property="HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="VerticalScrollBarVisibility"
                        Value="Disabled" />
                <Setter Property="PanningMode"
                        Value="HorizontalOnly" />
            </Style>
        </ControlTemplate.Resources>
        <Grid x:Name="ContentGrid"
              Height="Auto"
              VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="rowDefinition"
                               Height="94" />
                <RowDefinition x:Name="rowDefinition1"
                               Height="{TemplateBinding ContentGapHeight}" />
            </Grid.RowDefinitions>
            <Border x:Name="border"
                    HorizontalAlignment="Stretch"
                    Margin="0,-1,0,0"
                    Width="Auto"
                    BorderThickness="0,1"
                    Grid.Row="1"
                    BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{DynamicResource RibbonBackgoundBrush}" />
            <Border HorizontalAlignment="Stretch"
                    Margin="1,0,1,1"
                    Grid.Row="1"
                    Grid.RowSpan="1">
                <ContentControl x:Name="mainContentControl"
                                Margin="0,1,0,0"
                                Focusable="False">
                    <ContentPresenter ContentSource="SelectedContent"
                                      x:Name="contentPresenter"
                                      HorizontalAlignment="Stretch"
                                      Margin="0" />
                </ContentControl>
            </Border>
            <Border x:Name="shadowBorder"
                    Margin="0,-1,0,0"
                    VerticalAlignment="Stretch"
                    Width="Auto"
                    Grid.Row="2"
                    Grid.RowSpan="1"
                    BorderThickness="0,1,0,0"
                    BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Background="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="shadowBorder_Copy"
                    Margin="0,-1,0,0"
                    VerticalAlignment="Stretch"
                    Width="Auto"
                    Grid.Row="2"
                    Grid.RowSpan="1"
                    BorderThickness="0,1,0,0"
                    Background="#FFD5D5D5"
                    BorderBrush="#FFD5D5D5" />
            <Grid x:Name="TabsGrid"
                  HorizontalAlignment="Stretch"
                  Margin="0"
                  Width="Auto"
                  Grid.RowSpan="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />

                <ContentPresenter Grid.Column="0"  
                                  VerticalAlignment="Stretch"
                                  ContentSource="Menu" />

                <Fluent:RibbonScrollViewer Grid.Column="1"
                                           HorizontalAlignment="Left"
                                           Margin="0,-7,1,0"
                                           Width="Auto"
                                           Style="{DynamicResource RibbonTabScrollViewer}"
                                           HorizontalScrollBarVisibility="Auto"
                                           VerticalScrollBarVisibility="Disabled"
                                           IsHitTestVisible="True">
                    <Fluent:RibbonTabsContainer x:Name="PART_TabsContainer"
                                                IsItemsHost="True"
                                                Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                Margin="0" />
                </Fluent:RibbonScrollViewer>

                <StackPanel x:Name="toolbarPlaceholder"
                            HorizontalAlignment="Right"
                            Grid.Column="3"
                            Orientation="Horizontal"
                            Margin="0,0,0,1">
                    <Grid Margin="0,0,3,0">
                        <xctk:WatermarkTextBox Height="19" Width="150" Padding="0,2,20,0" x:Name="PART_QuickSearch">
                            <xctk:WatermarkTextBox.Watermark>
                                <Grid>
                                    <TextBlock Text="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickLaunch , Mode=OneWay}" Margin="4,0,0,0" />
                                </Grid>
                            </xctk:WatermarkTextBox.Watermark>
                        </xctk:WatermarkTextBox>
                        <Image HorizontalAlignment="Right" Width="14" Height="14" Margin="0,1,3,0" Source="/Fluent;Component/Themes/Office2013/Images/Search.png" Stretch="None" />
                        <Popup x:Name="PART_QuickSearchPopup" PlacementTarget="{Binding ElementName=PART_QuickSearch, Mode=OneWay}" IsOpen="{Binding HasItems, ElementName=PART_QuickSearchResults, Mode=OneWay}" Placement="Custom" FocusManager.IsFocusScope="True" StaysOpen="False">
                            <ListBox x:Name="PART_QuickSearchResults" HorizontalContentAlignment="Stretch">
                                <ListBox.Resources>
                                    <FluentConverters:ObjectToImageConverter x:Key="StringToImageConvert" />

                                    <Style x:Key="DefaultSeparatorStyle" TargetType="{x:Type Separator}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Height="1" SnapsToDevicePixels="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style x:Key="LabelSeparatorStyle" TargetType="Label">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Label">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <ContentPresenter Grid.Column="0" VerticalAlignment="Center" />
                                                        <Separator Grid.Column="1" Margin="6,0,0,0" Style="{StaticResource DefaultSeparatorStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.Resources>

                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Margin="3,6,3,3" Content="{Binding Name}" Style="{StaticResource LabelSeparatorStyle}" />
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ListBox.GroupStyle>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel HorizontalAlignment="Stretch" Margin="0,1,0,1">
                                            <DockPanel.Resources>
                                                <Style TargetType="DockPanel">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DockPanel.Resources>
                                            <ContentPresenter DockPanel.Dock="Left" Content="{Binding Icon, Converter={StaticResource StringToImageConvert}}" Width="16" Height="16" Margin="-3,1,3,1" />
                                            <TextBlock Margin="0,2,6,1" TextTrimming="CharacterEllipsis"><TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Text="{Binding DisplayPath}" /><TextBlock Text="{Binding Text}" TextTrimming="CharacterEllipsis" /></TextBlock>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Popup>
                    </Grid>
                    
                    <Grid Width="22"
                          Height="22">
                        <Image x:Name="image"
                               Source="/Fluent;Component/Themes/Office2010/Images/RibbonPin.png"
                               Stretch="None"
                               Visibility="Collapsed" />
                        <Fluent:ToggleButton x:Name="PART_MinimizeButton"
                                             Margin="0"
                                             Width="22"
                                             Height="22"
                                             Size="Small"
                                             Style="{DynamicResource RibbonTabControlToggleButtonStyle}"
                                             IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             Visibility="{TemplateBinding HasItems, Converter={StaticResource boolToVisibilityConverter}}" />
                    </Grid>

                    <StackPanel x:Name="PART_ToolbarPanel"
                                Orientation="Horizontal" />
                </StackPanel>
            </Grid>
			
            <Popup x:Name="PART_Popup"
                   PlacementTarget="{Binding Path=SelectedTabItem,RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                   Placement="Custom"
                   StaysOpen="True"
                   AllowsTransparency="True"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   HorizontalOffset="0">
                <Grid Width="Auto"
                      Height="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="94" />
                        <RowDefinition Height="1" />
                    </Grid.RowDefinitions>
                    <Border Height="Auto"
                            BorderBrush="Transparent"
                            Background="{DynamicResource RibbonBackgoundBrush}"
                            BorderThickness="0">
                        <ContentControl x:Name="popupContentControl"
                                        Margin="0" />
                    </Border>
                    <Border Margin="0"
                            VerticalAlignment="Bottom"
                            Width="Auto"
                            Grid.Row="1"
                            Grid.RowSpan="1"
                            BorderThickness="0,1,0,0"
                            Height="1"
                            BorderBrush="#FFD5D5D5"
                            Background="#FFD5D5D5" />
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMinimized"
                     Value="True">
                <Setter Property="Height"
                        TargetName="rowDefinition"
                        Value="0" />
                <Setter Property="Height"
                        TargetName="rowDefinition1"
                        Value="0" />
                <!-- Switch content to popup -->
                <Setter Property="Content"
                        TargetName="mainContentControl"
                        Value="{x:Null}" />
                <Setter Property="Content"
                        TargetName="popupContentControl"
                        Value="{Binding ElementName=contentPresenter, Mode=OneWay}" />
                <!-- Switch content to popup END -->
                <Setter Property="Visibility"
                        TargetName="image"
                        Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDropDownOpen"
                               Value="True" />
                    <Condition Property="IsMinimized"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="image"
                        Value="Visible" />
                <Setter Property="Opacity"
                        TargetName="PART_MinimizeButton"
                        Value="0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>